volumes:
  repo:

services:
  initcontainer:
    image: mcr.microsoft.com/mssql-tools
    container_name: initcontainer
    user: root # run as root so apt-get can write
    depends_on:
      - azuresql
    volumes:
      - repo:/shared
    environment:
      - SA_PASSWORD=yourStrong(!)Password
    command:
      - bash
      - -euxc
      - |
        apt-get update
        apt-get install -y git
        rm -rf /var/lib/apt/lists/*

        if [ ! -d /shared/cloudnativeblazorpong/.git ]; then
          echo 'Cloning CloudnativeBlazorpong…'
          git clone --depth 1 https://github.com/macel94/cloudnativeblazorpong.git /shared/cloudnativeblazorpong
        else
          echo 'Updating existing clone…'
          cd /shared/cloudnativeblazorpong
          git pull --ff-only
        fi
        echo 'Cloned contents of cloudnativeblazorpong repository:'
        ls /shared/cloudnativeblazorpong

        echo 'Copying Blazorpong.DB.AzureSql project files…'
        cp /shared/cloudnativeblazorpong/src/Blazorpong.DB.AzureSql/bin/Debug/Blazorpong.DB.AzureSql.dacpac \
          /tmp/yourdb.dacpac
        echo 'DACPAC copied to /tmp/yourdb.dacpac'

        chmod +x /shared/cloudnativeblazorpong/src/scripts/initcontainer.sh
        /shared/cloudnativeblazorpong/src/scripts/initcontainer.sh
    restart: "no"

  webapp:
    image: ghcr.io/macel94/cloudnativeblazorpong/blazorpong-web:latest
    container_name: webapp
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - GameHubEndpoint=http://localhost:6351/gamehub # using external port because when i use it this endpoint is used client side and i'm outside the network
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_RESOURCE_ATTRIBUTES=service.name=webapp

    ports:
      - "6350:8080"
      - "6401:9090"
    depends_on:
      - signalr
      - collector
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s          # poll every 30 s
      timeout: 10s           # fail fast if curl hangs
      start_period: 10s
      retries: 3             

  signalr:
    image: ghcr.io/macel94/cloudnativeblazorpong/blazorpong-signalr:latest
    container_name: signalr
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__AzureSql=Server=azuresql;Database=BlazorpongDB;User=sa;Password=yourStrong(!)Password;TrustServerCertificate=True;Encrypt=False;
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_RESOURCE_ATTRIBUTES=service.name=signalr
    ports:
      - "6351:8080"
      - "6402:9090"
    depends_on:
      initcontainer:
        condition: service_completed_successfully
      redis:
        condition: service_started
      collector:
        condition: service_started

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"

  azuresql:
    image: "mcr.microsoft.com/mssql/server:2025-latest"
    container_name: azuresql
    hostname: azuresql
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=yourStrong(!)Password
    ports:
      - "1433:1433"
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -C -U sa -P "$$MSSQL_SA_PASSWORD" -Q "select 1"
      interval: 3s
      timeout: 1s
      retries: 10

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090"
    volumes:
      - repo:/shared:ro
    command:
      - "--config.file=/shared/cloudnativeblazorpong/src/Observability/prometheus.yaml"

  collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: collector
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8889"
    volumes:
      - repo:/shared:ro
    command:
      - "--config=/shared/cloudnativeblazorpong/src/Observability/otel-collector-config.yaml"
    depends_on:
      - tempo
      - prometheus
      - loki

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    volumes:
      - repo:/shared:ro
    command:
      - "-config.file=/shared/cloudnativeblazorpong/src/Observability/tempo.yaml"
    ports:
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - repo:/shared:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      # point Grafana at the freshly-scaffolded provisioning folder:
      - GF_PATHS_PROVISIONING=/shared/cloudnativeblazorpong/src/Observability/grafana/provisioning
    depends_on:
      - tempo
      - loki
      - prometheus

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - repo:/shared:ro
    command:
      - "-config.file=/shared/cloudnativeblazorpong/src/Observability/loki.yaml"
