version: '3.8'

services:
  webapp:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - GameHubEndpoint=http://localhost:6351/gamehub
    ports:
      - "6350:8080"
    depends_on:
      - signalr

  signalr:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__AzureSql=Server=azuresql;Database=Blazorpong.Database.AzureSql;User=sa;Password=yourStrong(!)Password;TrustServerCertificate=True
    ports:
      - "6351:8080"
    depends_on:
      - redis
      - azuresql

  signalr-dapr:
    command: ["./daprd",
      "-app-id", "signalr",
      "-app-port", "8080",
      "-components-path", "/components",
      "-config", "/configuration/config.yaml"
      ]
    volumes:
      - "./.dapr/components/:/components"
      - "./.dapr/:/configuration"
    depends_on:
      - signalr

  redis:
    ports:
      - "6379:6379"

  azuresql:
    volumes:
      - ./Blazorpong.Database.AzureSql/Snapshots:/backup:ro
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=yourStrong(!)Password
      - MSSQL_PID=Developer
      - MSSQL_PACKAGE=/backup/v0.dacpac
    ports:
      - "1433:1433"

  dapr-dashboard:
    command: [ "--docker-compose=true", 
      "--components-path=/home/nonroot/components", 
      "--config-path=/home/nonroot/configuration", 
      "--docker-compose-path=/home/nonroot/docker-compose.yml" ]
    ports:
      - "8080:8080"
    volumes:
      - "./.dapr/components/:/home/nonroot/components"
      - "./.dapr/:/home/nonroot/configuration"
      - ./docker-compose.yml:/home/nonroot/docker-compose.yml

# send logs to dapr and integrate opentelemetry with something like jaeger or zipkin or prometheus and grafana