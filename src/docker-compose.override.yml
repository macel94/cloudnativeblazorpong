# x-logging: &default-logging
#   driver: loki
#   options:
#     loki-url: 'http://localhost:3100/api/prom/push'
#     loki-pipeline-stages: |
#       - multiline:
#           firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
#           max_wait_time: 3s
#       - regex:
#           expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

# services:
#   webapp:
#     image: ${DOCKER_REGISTRY-}blazorpongwebserver
#     build:
#       context: .
#       dockerfile: BlazorPong.Web/Server/Dockerfile
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#       - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
#       - GameHubEndpoint=http://localhost:6351/gamehub
#       - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4318
#     ports:
#       - "6350:8080"
#       - "6401:9090"
#     depends_on:
#       - signalr
#       - collector

#   signalr:
#     image: ${DOCKER_REGISTRY-}blazorpongsignalr
#     build:
#       context: .
#       dockerfile: BlazorPong.SignalR/Dockerfile
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#       - ConnectionStrings__Redis=redis:6379
#       - ConnectionStrings__AzureSql=Server=azuresql;Database=Blazorpong.DB.AzureSql;User=sa;Password=yourStrong(!)Password;TrustServerCertificate=True
#       - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4318
#     ports:
#       - "6351:8080"
#       - "6402:9090"
#     depends_on:
#       - redis
#       - azuresql
#       - collector

#   redis:
#     image: "redis:latest"
#     ports:
#       - "6379:6379"

#   azuresql:
#     image: "mcr.microsoft.com/azure-sql-edge:latest"
#     volumes:
#       - ./Blazorpong.DB.AzureSql/bin/Debug:/backup:ro
#     environment:
#       - ACCEPT_EULA=Y
#       - MSSQL_SA_PASSWORD=yourStrong(!)Password
#       - MSSQL_PID=Developer
#       - MSSQL_PACKAGE=/backup/Blazorpong.DB.AzureSql.dacpac
#     ports:
#       - "1433:1433"

#   prometheus:
#     image: prom/prometheus:latest
#     ports:
#       - "9090"
#     volumes:
#       - ./Observability/prometheus.yaml:/etc/prometheus/prometheus.yaml

#   collector:
#     image: otel/opentelemetry-collector-contrib:latest
#     container_name: collector
#     command: [ "--config=/etc/collector.yaml" ]
#     ports:
#       - "4317:4317"
#       - "4318:4318"
#       - "8889:8889"
#     volumes:
#       - ./Observability/otel-collector-config.yaml:/etc/collector.yaml
#     depends_on:
#       - tempo
#       - prometheus
#       - loki

#   tempo:
#     image: grafana/tempo:latest
#     container_name: tempo
#     command: [ "-config.file=/etc/tempo.yaml" ]
#     volumes:
#       - ./Observability/tempo.yaml:/etc/tempo.yaml
#     logging: *default-logging
#     ports:
#       - "3200"   # tempo
#       - "4317"  # otlp grpc
#       - "4318"  # otlp http

#   grafana:
#     image: grafana/grafana:latest
#     container_name: grafana
#     logging: *default-logging
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./Observability/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
#       - ./Observability/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
#       - ./Observability/dashboards:/etc/grafana/dashboards
#     environment:
#       - GF_AUTH_ANONYMOUS_ENABLED=true
#       - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#       - GF_AUTH_DISABLE_LOGIN_FORM=true
#       - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
#     depends_on:
#       - tempo
#       - loki
#       - prometheus

#   loki:
#     image: grafana/loki:latest
#     container_name: loki
#     command: -config.file=/etc/loki.yaml
#     # healthcheck:
#     #     test: wget -q --tries=1 -O- http://localhost:3100/ready 
#     #     interval: 3s
#     #     timeout: 3s
#     #     retries: 10
#     #     start_period: 10s
#     ports:
#       - "3100:3100"
#     volumes:
#       - ./Observability/loki.yaml:/etc/loki.yaml