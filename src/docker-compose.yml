networks:
  blazorpong-network:
    driver: bridge

services:
  webapp:
    image: ${DOCKER_REGISTRY-}blazorpong-web
    container_name: webapp
    build:
      context: .
      dockerfile: BlazorPong.Web/Server/Dockerfile
    networks:
      - blazorpong-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - GameHubEndpoint=http://localhost:6351/gamehub # using external port because when i use it this endpoint is used client side and i'm outside the network
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_RESOURCE_ATTRIBUTES=service.name=webapp

    ports:
      - "6350:8080"
      - "6401:9090"
    depends_on:
      - signalr
      - collector

  signalr:
    image: ${DOCKER_REGISTRY-}blazorpong-signalr
    container_name: signalr
    networks:
      - blazorpong-network
    build:
      context: .
      dockerfile: BlazorPong.SignalR/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__AzureSql=Server=azuresql;Database=BlazorpongDB;User=sa;Password=yourStrong(!)Password;TrustServerCertificate=True;Encrypt=False;
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_RESOURCE_ATTRIBUTES=service.name=signalr
    ports:
      - "6351:8080"
      - "6402:9090"
    depends_on:
      azuresql-init:
        condition: service_completed_successfully
      redis:
        condition: service_started   # port-open is enough for Redis
      collector:
        condition: service_started

  redis:
    networks:
      - blazorpong-network
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"

  prometheus:
    networks:
      - blazorpong-network
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER-.}/src/Observability/prometheus.yaml:/etc/prometheus/prometheus.yaml

  collector:
    networks:
      - blazorpong-network
    image: otel/opentelemetry-collector-contrib:latest
    container_name: collector
    command: [ "--config=/etc/collector.yaml" ]
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8889"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER-.}/src/Observability/otel-collector-config.yaml:/etc/collector.yaml
    depends_on:
      - tempo
      - prometheus
      - loki

  tempo:
    networks:
      - blazorpong-network
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER-.}/src/Observability/tempo.yaml:/etc/tempo.yaml
    # logging: *default-logging
    ports:
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http

  grafana:
    networks:
      - blazorpong-network
    image: grafana/grafana:latest
    container_name: grafana
    # logging: *default-logging
    ports:
      - "3000:3000"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER-.}/src/Observability/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ${LOCAL_WORKSPACE_FOLDER-.}/src/Observability/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ${LOCAL_WORKSPACE_FOLDER-.}/src/Observability/dashboards:/etc/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    depends_on:
      - tempo
      - loki
      - prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`localhost`) && PathPrefix(`/grafana`)"
      - "traefik.http.middlewares.grafana-stripprefix.stripprefix.prefixes=/grafana"
      - "traefik.http.routers.grafana.middlewares=grafana-stripprefix"

  loki:
    networks:
      - blazorpong-network
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki.yaml
    ports:
      - "3100:3100"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER-.}/src/Observability/loki.yaml:/etc/loki.yaml